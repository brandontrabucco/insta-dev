from insta.utils import (
    BrowserStatus
)

from insta.configs.task_proposer_config import (
    BrowserTaskProposal
)

import abc


class BaseTaskParser(abc.ABC):
    """Implements a parser for converting text generated by an LLM into a
    task for an LLM agent to attempt to complete using a web browser,
    returns a BrowserJudgment instance parsed from the response.

    Attributes:

    system_prompt: str
        Depending on the task representation, this system prompt
        instructs the LLM on how to generate tasks in the corresponding format,
        such as JSON-based tasks, YAML format, etc.

    user_prompt_template: str
        A template string that is used to generate a user prompt for the LLM,
        and has format keys for `annotations` which represents
        previous task runs and judgments produced by the LLM judge.

    """

    system_prompt: str
    user_prompt_template: str

    @abc.abstractmethod
    def parse_task(self, response: str) -> BrowserTaskProposal | BrowserStatus:
        """Parse a task proposal string produced by an LLM, and return a
        BrowserTaskProposal object that contains the proposed task,
        and additional metadata about the task feasibility, and difficulty.

        Arguments:

        response: str
            The response from an LLM that contains a task proposal in a code block,
            which will be parsed into a BrowserTaskProposal object.
        
        Returns:

        BrowserTaskProposal | PlaywrightStatus
            The parsed task proposal, or a BrowserStatus object that
            represents a failed parsing attempt.
        
        """

        return NotImplemented
